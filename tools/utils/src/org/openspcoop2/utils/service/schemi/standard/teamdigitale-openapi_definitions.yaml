# This file contains reusable openapi-v3 entities for defining
#   interoperable API behavior by adopting developers.
#
# GitHub Project: https://github.com/teamdigitale/openapi
# Source: https://teamdigitale.github.io/openapi/0.0.6/
#         Un indice delle versioni e' disponibile in: https://teamdigitale.github.io/openapi/
# nota: il sorgente e' stato adattato alle esigenze dei servizi rest di govway e del framework utilizzato
#
openapi: 3.0.0
components: 
  headers:

    # https://raw.githubusercontent.com/teamdigitale/openapi/0.0.6/docs/headers/v3.yaml
    # Throttling headers.
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
        format: int32
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: integer
        format: int32
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        type: integer
        format: int32
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        type: integer
        format: int32

    Location:
      description: |-
        In some responses, this header references the
        primary resource created. 

        It is used for redirections too.

        See https://tools.ietf.org/html/rfc7231#section-7.1.2

        Header Location inserito in una risposta ad una richiesta POST, terminata con successo 'http 201'.
        L'header indica l'id dell'oggetto creato.
      schema:
        type: string
        format: uri

  parameters:
  
    # https://raw.githubusercontent.com/teamdigitale/openapi/0.0.6/docs/parameters/v3.yaml
    
    # Parameters commonly used for pagination
    cursor:
      name: cursor
      in: query
      description: An opaque identifier that points to the next item in the collection.
      example: 01BX9NSMKVXXS5PSP2FATZM123
      schema:
        type: string
    fields:
      name: fields
      in: query
      description: Fields to retrieve
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: How many items to return at one time (max 100)
      schema:
        type: integer
        format: int32
    offset:
      name: offset
      in: query
      description: The zero-ary offset index into the results
      schema:
        type: integer
        default: 0
        format: int32
    q:
      name: q
      in: query
      description: Search query term
      schema:
        type: string
    sort:
      name: sort
      in: query
      description: Sorting order
      schema:
        type: string
        example: +name
    citizen:
      name: citizen
      in: query
      description: testme
      schema:
        $ref: '#/components/schemas/Person'

    #
    # Header parameters for Optimistic Locking.
    #
    Etag:
      name: Etag
      description: |
        The RFC7232 ETag header field in a response provides the current entity-
        tag for the selected resource. An entity-tag is an opaque identifier for
        different versions of a resource over time, regardless whether multiple
        versions are valid at the same time. An entity-tag consists of an opaque
        quoted string, possibly prefixed by a weakness indicator.
      in: header
      example: 'W/"xy", "5", "7da7a728-f910-11e6-942a-68f728c1ba70"'
      required: false
      schema:
        type: string
    IfMatch:
      name: If-Match
      description: |
        The RFC7232 If-Match header field in a request requires the server to
        only operate on the resource that matches at least one of the provided
        entity-tags. This allows clients express a precondition that prevent
        the method from being applied if there have been any changes to the
        resource.
      in: header
      required: false
      example: '"5", "7da7a728-f910-11e6-942a-68f728c1ba70"'
      schema:
        type: string
    IfNoneMatch:
      name: If-None-Match
      description: |
        The RFC7232 If-None-Match header field in a request requires the server
        to only operate on the resource if it does not match any of the provided
        entity-tags. If the provided entity-tag is `*`, it is required that the
        resource does not exist at all.
      in: header
      required: false
      example: '"7da7a728-f910-11e6-942a-68f728c1ba70", *'
      schema:
        type: string

  responses:
  
    # https://raw.githubusercontent.com/teamdigitale/openapi/0.0.6/docs/responses/v3.yaml
    
    400BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Bad Request
    404NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Not Found
    429TooManyRequests:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Too many requests
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
    503ServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: '#/components/headers/Retry-After'
    default:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      description: Unexpected error
    
    # Aggiunte
    
    401Unauthorized:
      description: Non sono state fornite le credenziali necessarie
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    403Forbidden:
      description: Autorizzazione non concessa per l'operazione richiesta
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
    409Conflict:
      description: Conflict (L'entità che si vuole creare risulta già esistente)
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'

    201Created:
      description: Resource created
      headers:
        Location:
          $ref: '#/components/headers/Location'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
          
    202Accepted:
      description: Request accepted
      headers:
        Location:
          $ref: '#/components/headers/Location'
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'

    200Status:
      description: Il servizio funziona correttamente
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemTeamDigitale' # in attesa che correggono il validatore che non si accorge della struttura allOf e anyOf
          
  schemas:

    # https://raw.githubusercontent.com/teamdigitale/openapi/0.0.6/docs/schemas/geometry.yaml

    # Schemas for Latitude and Longitude based on ETRS89
    # for European territories and WGS for the others.
    # You can chose either the numeric or string format.
    
    Longitude:
      description: |-
        Longitude of a point expressed in:
    
        * the ETRS89 system for Italian and European territories
        * and in WGS84 for the others.
      externalDocs:
        url: http://dati.gov.it/onto/clvapit#long
      type: number
      format: double
      minimum: -180
      maximum: 180
      example: 9.19289
    Latitude:
      description: |-
        Latitude of a point expressed in:
    
        * the ETRS89 system for Italian and European territories
        * and in WGS84 for the others.
      externalDocs:
        url: http://dati.gov.it/onto/clvapit#long
      type: number
      format: double
      minimum: -90
      maximum: 90
      example: 45.492599
    
    
    LongitudeString:
      description: |-
        Latitude of a point expressed in:
    
        * the ETRS89 system for Italian and European territories
        * and in WGS84 for the others.
    
        Value is serialized as a string. The associated numeric value must be
        between -180 and 180.
    
        The string value is safe from floating-point aritmetic errors.
    
      type: string
      example: "9.192894141231231"
    LatitudeString:
      description: |-
        Latitude of a point expressed in:
    
        * the ETRS89 system for Italian and European territories
        * and in WGS84 for the others.
    
        Value is serialized as a string. The associated numeric value must be
        between -90 and 90.
    
        The string value is safe from floating-point aritmetic errors.
      type: string
      example: "45.492599412312331"
    
    Coordinates:
      type: object
      description: >-
        Geographic coordinates of a point. The names "lat" and "long"
        are inherited from the clvapit.
    
        Example URL: http://dati.beniculturali.it/lodview/mibact/luoghi/resource/Geometry/Coordinate_geografiche_della_sede_di_Gallerie_degli_Uffizi_-_Corridoio_Vasariano_20440.html
      properties:
        lat:
          $ref: '#/components/schemas/Latitude'
        long:
          $ref: '#/components/schemas/Longitude'
      required:
      - lat
      - long   
  
    # https://raw.githubusercontent.com/teamdigitale/openapi/0.0.6/docs/schemas/money.yaml 
    Money:
      description: |
        An amount of money in a given currency.
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        amount:
          description: >
            ISO20022: Amount of money to be moved between the debtor and
            creditor, before deduction of charges, expressed in the currency as
            ordered by the initiating party.
          type: string
          pattern: '^\-{0,1}[0-9]{1,13}(\.[0-9]{0,5}){0,1}$'
      example:
        currency: EUR
        amount: '12.25'
    CurrencyCode:
      description: >
        Specifies the currency of the amount or of the account.
    
        A code allocated to a currency by a Maintenance Agency under an
        international identification scheme, as described in the latest edition
        of the international standard ISO 4217 "Codes for the representation of
        currencies and funds".
      type: string
      pattern: '^[A-Z]{3,3}$'
      example: EUR

    # https://raw.githubusercontent.com/teamdigitale/openapi/0.0.6/docs/schemas/person.yaml
    Person:
      type: object
      properties:
        tax_code:
          $ref: '#/components/schemas/TaxCode'
        given_name:
          type: string
        family_name:
          type: string
      externalDocs:
        url: https://w3id.org/italia/onto/CPV
   
    # https://raw.githubusercontent.com/teamdigitale/openapi/0.0.6/docs/schemas/problem.yaml
    
    ProblemTeamDigitale:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://tools.ietf.org/html/rfc7231#section-6.6.4'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem. You MUST NOT expose internal informations, personal
            data or implementation details through this field.
          example: Request took too long to complete.
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.

    # Nel RFC 7807 vengono definiti i formati e i nomi di diversi elementi chiave che descrivono un problema (sezione 3.1), senza però definire alcun elemento obbligatorio (come anche formalmente indicato in 6.1 ). La struttura json è inoltre estendibile con altri elementi (sezione 3.2).
    # Tutte le considerazioni sopra indicate sono state riportate nella proposta di json schema presente in https://raw.githubusercontent.com/teamdigitale/openapi/0.0.6/docs/schemas/problem.yaml ed infatti l'elemento Problem non definisce alcun elemento 'required' e non definisce l'attributo 'additionalProperties' lasciando quindi aperta la possibilità di estendere l'oggetto con altri elementi.
    # L'oggetto 'ProblemTeamDigitale' sopra riportato considera valida qualsiasi struttura json, anche Problem Detail che non presentano alcun elemento chiave tra type, title e status.
    # Di seguito viene quindi proposto un oggetto Problem, utilizzabile per validare le risposte in errore, raggruppando gli elementi chiave in una struttura 'anyOf' in modo che un problem contenga almeno uno degli elementi indicati nella sezione 3.1 come elementi base che deve consultare il consumer per comprendere la natura dell'errore.
    # Viene lasciato l'oggetto originale, denominandolo in 'ProblemTeamDigitale' per consentirne l'utilizzo se necessario.

    Problem:
      type: object
      allOf:
        - $ref: '#/components/schemas/ProblemId'
        - $ref: '#/components/schemas/ProblemDetails'

    ProblemId:
      type: object
      anyOf:
        - $ref: '#/components/schemas/ProblemType'
        - $ref: '#/components/schemas/ProblemTitle'
        - $ref: '#/components/schemas/ProblemStatus'
    
    ProblemType:
      type: object
      required:
      - type
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://tools.ietf.org/html/rfc7231#section-6.6.4'

    ProblemTitle:
      type: object
      required:
      - title
      properties:
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable

    ProblemStatus:
      type: object
      required:
      - status
      properties:
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        
    ProblemDetails:
      type: object
      properties:
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem. You MUST NOT expose internal informations, personal
            data or implementation details through this field.
          example: Request took too long to complete.
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.



    # https://raw.githubusercontent.com/teamdigitale/openapi/0.0.6/docs/schemas/tax_code.yaml
    TaxCode:
      description: Il codice fiscale.
      type: string
      externalDocs:
        url: https://w3id.org/italia/onto/CPV/taxCode
      example: RSSMRA75L01H501A
      pattern: >-
        ^(?:(?:[B-DF-HJ-NP-TV-Z]|[AEIOU])[AEIOU][AEIOUX]|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$
