
<project name="setup-distrib" basedir=".">
	
	<description>
        	SETUP DISTRIB
	</description>

	<import file="../../commons/utils.xml" />
	
	<target name="make-distrib">
		
		<!-- Installazione GovWay -->
		<if>
			<matches string="${antinstaller_as}" pattern="jboss.*"/>
			<then>
				<if>
					<equals arg1="${build_openspcoop_archive_suffix}" arg2="stateless"/>
					<then>
						<if>
							<or>
								<equals arg1="${antinstaller_as}" arg2="jboss4" />
								<equals arg1="${antinstaller_as}" arg2="jboss5" />
								<equals arg1="${antinstaller_as}" arg2="jboss6" />
							</or>
							<then>
								<copy file="${deploy_resources}/${build_openspcoop_archive_suffix}/INSTALL_JBOSS_v4_v5_v6" tofile="${dist}/INSTALL.txt" />
							</then>
							<else>
								<copy file="${deploy_resources}/${build_openspcoop_archive_suffix}/INSTALL_JBOSS_v7" tofile="${dist}/INSTALL.txt" />
							</else>
						</if>
					</then>
					<else>
						<if>
							<or>
								<equals arg1="${antinstaller_as}" arg2="jboss4" />
								<equals arg1="${antinstaller_as}" arg2="jboss5" />
							</or>
							<then>
								<copy file="${deploy_resources}/${build_openspcoop_archive_suffix}/INSTALL_JBOSS_v4_v5" tofile="${dist}/INSTALL.txt" />
							</then>
						</if>
						<if>
							<equals arg1="${antinstaller_as}" arg2="jboss6" />
							<then>
								<copy file="${deploy_resources}/${build_openspcoop_archive_suffix}/INSTALL_JBOSS_v6" tofile="${dist}/INSTALL.txt" />
							</then>
						</if>
						<if>
							<equals arg1="${antinstaller_as}" arg2="jboss7" />
							<then>
								<copy file="${deploy_resources}/${build_openspcoop_archive_suffix}/INSTALL_JBOSS_v7" tofile="${dist}/INSTALL.txt" />
							</then>
						</if>
						<mkdir dir="${dist}/jms" />
						<copy todir="${dist}/jms" flatten="true">
							<fileset dir="${deploy_jms}/${antinstaller_as}">
								<include name="*"/>
								<type type="file"/>
							</fileset>
						</copy>
					</else>
				</if>
			</then>
		</if>		
		<if>
			<matches string="${antinstaller_as}" pattern="wildfly.*"/>
			<then>
				<if>
					<equals arg1="${build_openspcoop_archive_suffix}" arg2="stateless"/>
					<then>
						<copy file="${deploy_resources}/${build_openspcoop_archive_suffix}/INSTALL_WILDFLY" tofile="${dist}/INSTALL.txt" />
					</then>
					<else>
						<if>
							<or>
								<equals arg1="${antinstaller_as}" arg2="wildfly8" />
								<equals arg1="${antinstaller_as}" arg2="wildfly9" />
							</or>
							<then>
								<copy file="${deploy_resources}/${build_openspcoop_archive_suffix}/INSTALL_WILDFLY_v8_v9" tofile="${dist}/INSTALL.txt" />
							</then>
							<else>
								<copy file="${deploy_resources}/${build_openspcoop_archive_suffix}/INSTALL_WILDFLY_v10-v21" tofile="${dist}/INSTALL.txt" />
							</else>
						</if>
						<mkdir dir="${dist}/jms" />
						<copy todir="${dist}/jms" flatten="true">
							<fileset dir="${deploy_jms}/${antinstaller_as}">
								<include name="*"/>
								<type type="file"/>
							</fileset>
						</copy>
					</else>
				</if>
			</then>
		</if>
		<if>
			<matches string="${antinstaller_as}" pattern="tomcat.*"/>
			<then>
				<copy file="${deploy_resources}/${build_openspcoop_archive_suffix}/INSTALL_TOMCAT" tofile="${dist}/INSTALL.txt" />
			</then>
		</if>
		<replace file="${dist}/INSTALL.txt" token="/etc/govway/" value="${work_dir}"/>
		
		<!-- Datasource -->
		<mkdir dir="${dist}/datasource"/>
		<copy todir="${dist}/datasource">
		    <fileset dir="${tmp_ds}">
		      <include name="*.xml"/>
		    </fileset>
		</copy>
		<if>
			<equals arg1="${antinstaller_console_env}" arg2="manager"/>
			<then>
				<mkdir dir="${dist}/datasource/manager"/>
				<mkdir dir="${dist}/datasource/runtime"/>

				<!-- copio datasource in manager -->
				<copy todir="${dist}/datasource/manager">
					<fileset dir="${dist}/datasource">
						<!-- ci vuole per govwayConsole monitoraggio messaggi in carico <exclude name="govway-ds.xml"/> -->
						<exclude name="domibus-ds.xml"/>
						<exclude name="govway.xml"/>
						<exclude name="govwaySec.xml"/>
						<exclude name="manager"/>
						<exclude name="runtime"/>
					</fileset>
				</copy>

				<!-- elimino datasource che non servono in runtime -->
				<if>
					<matches string="${antinstaller_as}" pattern="tomcat.*"/>
					<then>
						<delete>
							<fileset dir="${dist}/datasource">
								<exclude name="govway.xml"/>
								<exclude name="govwaySec.xml"/>
								<exclude name="manager"/>
								<exclude name="manager/**"/>
								<exclude name="runtime"/>
							</fileset>
						</delete>
					</then>
				</if>
				<if>
					<and>
						<equals arg1="${antinstaller_log_db}" arg2="runtime"/>
						<equals arg1="${antinstaller_config_db}" arg2="config"/>
					</and>
					<then>
						<delete file="${dist}/datasource/govway_tracciamento-ds.xml"/>
					</then>
				</if>
				<if>
					<equals arg1="${antinstaller_stats_env}" arg2="batch"/>
					<then>
						<delete file="${dist}/datasource/govway_statistiche-ds.xml"/>
					</then>
				</if>

				<!-- copio datasource in runtime -->
				<move todir="${dist}/datasource/runtime">
					<fileset dir="${dist}/datasource">
						<exclude name="manager"/>
						<exclude name="manager/**"/>
						<exclude name="runtime"/>
					</fileset>
				</move>
				<replace dir="${dist}/datasource/manager" 
					token="&lt;min-pool-size>10&lt;/min-pool-size>" 
					value="&lt;min-pool-size>5&lt;/min-pool-size>"/>
				<replace dir="${dist}/datasource/manager" 
					token="&lt;max-pool-size>50&lt;/max-pool-size>" 
					value="&lt;max-pool-size>20&lt;/max-pool-size>"/>
			</then>
		</if>


		<!-- Cfg -->
		<mkdir dir="${dist}/cfg"/>
		<copy todir="${dist}/cfg">
			<fileset dir="${deploy_resources}/core"/>
		</copy>
		<copy todir="${dist}/cfg">
		    <fileset dir="${tmp_cfg}" />
		</copy>
                <fileset dir="${dist}/cfg" id="distCFG.txt">
                        <include name="*"/>
                </fileset>
		<pathconvert pathsep=" " property="distCFG_list.txt" refid="distCFG.txt">
                        <map from="${dist}/cfg" to=""/>
                </pathconvert>
		<echo message="LIST CFG [${distCFG_list.txt}]"/>
		<if>
			<equals arg1="${distCFG_list.txt}" arg2=""/>
			<then>
				<delete dir="${dist}/cfg"/>
			</then>
		</if>
		<if>
			<not>
				<istrue value="${antinstaller_loader}"/>
			</not>
			<then>
				<delete file="${dist}/cfg/loader_local.properties"/>
			</then>
		</if>
		<if>
			<not>
				<istrue value="${antinstaller_rs_config}" />
			</not>
			<then>
				<delete file="${dist}/cfg/rs-api-config_local.properties"/>
			</then>
		</if>
		<if>
			<not>
				<istrue value="${antinstaller_rs_monitor}" />
			</not>
			<then>
				<delete file="${dist}/cfg/rs-api-monitor_local.properties"/>
			</then>
		</if>
		<replace file="${dist}/cfg/govway_local.jcs.properties" token="/etc/govway/indexed-disk-cache" value="${work_dir}/indexed-disk-cache"/>

		<if>
			<equals arg1="${antinstaller_modalita_installazione}" arg2="aggiornamento"/>
			<then>
				<mkdir dir="${dist}/cfg/utilities/diff"/>

				<antcall target="_setup_properties_aggiornamento"/>

				<replace dir="${dist}/cfg/utilities/diff" token="/etc/govway/indexed-disk-cache" value="${work_dir}/indexed-disk-cache"/>


				<move todir="${dist}/cfg" includeemptydirs="false">
					<fileset dir="${dist}/cfg">
						<include name="*.properties"/>
					</fileset>
					<mapper type="glob" from="*.properties" to="*.properties.new"/>
				</move>

			</then>
		</if>

		<var name="govway_local_properties_name" value="govway_local.properties"/>
		<if>
			<equals arg1="${antinstaller_modalita_installazione}" arg2="aggiornamento"/>
			<then>
				<var name="govway_local_properties_name" value="govway_local.properties.new"/>
			</then>
		</if>
		<if>
			<equals arg1="${antinstaller_stats_env}" arg2="batch"/>
			<then>
				<replaceregexp file="${dist}/cfg/${govway_local_properties_name}"
					       match="([a-zA-Zèéàùìò0-9=&quot;\.:\/@;,?#'_&lt;>\s]*)# Generazione Report[a-zA-Zèéàùìò0-9=&quot;\.:\/@;,?#'_&lt;>\s]*org\.openspcoop2\.pdd\.statistiche\.generazione\.baseMensile\.gestioneUltimoMese=false([a-zA-Zèéàùìò0-9=&quot;\.:\/@;,?#'_&lt;>\s]*)"
					       replace="\1COMMENTOSTATISTICHE\2"
					       byline="false"/>
				<replace file="${dist}/cfg/${govway_local_properties_name}">
							<replacetoken>COMMENTOSTATISTICHE</replacetoken>
							<replacevalue><![CDATA[# Generazione Report
#
# La generazione dei report statistici è disabilitata. Verrà gestita tramite l'applicazione batch.]]></replacevalue>
				</replace>
			</then>
		</if>

		<var name="govway_fileTrace_log4j2_properties_name" value="govway.fileTrace.log4j2.properties"/>
		<if>
			<equals arg1="${antinstaller_modalita_installazione}" arg2="aggiornamento"/>
			<then>
				<var name="govway_fileTrace_log4j2_properties_name" value="govway.fileTrace.log4j2.properties.new"/>
			</then>
		</if>
		<antcall target="replace_token">
		    <param name="file" value="${dist}/cfg/${govway_fileTrace_log4j2_properties_name}"/>
			<param name="token" value="/var/govway/log"/>
			<param name="value" value="${log_dir}"/>
		</antcall>
		
		<if>
			<equals arg1="${antinstaller_console_env}" arg2="manager"/>
			<then>
				<mkdir dir="${dist}/cfg/manager"/>
				<mkdir dir="${dist}/cfg/runtime"/>
				<move todir="${dist}/cfg/manager">
					<fileset dir="${dist}/cfg">
						<exclude name="govway_local*properties"/>
						<exclude name="govway_local*properties.new"/>
						<exclude name="govway.fileTrace*properties"/>
						<exclude name="govway.fileTrace*properties.new"/>
						<exclude name="consolePassword.properties"/>
						<exclude name="consolePassword.properties.new"/>
						<exclude name="trasparente*"/>
						<exclude name="modipa*"/>
						<exclude name="spcoop*"/>
						<exclude name="as4*"/>
						<exclude name="as4*/**"/>
						<exclude name="sdi*"/>
						<exclude name="manager"/>
						<exclude name="runtime"/>
						<exclude name="utilities/**/govway_local*"/>
						<exclude name="utilities/**/trasparente*"/>
						<exclude name="utilities/**/modipa*"/>
						<exclude name="utilities/**/spcoop*"/>
						<exclude name="utilities/**/as4*"/>
						<exclude name="utilities/**/as4*/**"/>
						<exclude name="utilities/**/sdi*"/>
					</fileset>
				</move>
				<copy todir="${dist}/cfg/manager">
					<fileset dir="${dist}/cfg">
						<include name="consolePassword.properties"/>
						<include name="consolePassword.properties.new"/>
						<include name="trasparente*"/>
						<include name="modipa*"/>
						<include name="spcoop*"/>
						<include name="as4*"/>
						<include name="as4*/**"/>
						<include name="sdi*"/>
						<include name="sdi*"/>
						<include name="utilities/**/trasparente*"/>
						<include name="utilities/**/modipa*"/>
						<include name="utilities/**/spcoop*"/>
						<include name="utilities/**/as4*"/>
						<include name="utilities/**/as4*/**"/>
						<include name="utilities/**/sdi*"/>
					</fileset>
				</copy>
				<move todir="${dist}/cfg/runtime">
					<fileset dir="${dist}/cfg">
						<exclude name="manager"/>
						<exclude name="manager/**"/>
						<exclude name="runtime"/>
					</fileset>
				</move>
			</then>
		</if>


		<!-- SQL -->
		<mkdir dir="${dist}/sql"/>
		<copy todir="${dist}/sql">
			<fileset dir="${tmp_sql}">
		                <include name="GovWay*.sql"/>
		        </fileset>
		</copy>
		<if>
			<equals arg1="${antinstaller_modalita_installazione}" arg2="nuova"/>
			<then>
				<var name="configInitSqlScriptName" value="GovWay_init.sql"/>
				<if>
					<equals arg1="${antinstaller_config_db}" arg2="config"/>
					<then>
						<var name="configInitSqlScriptName" value="GovWayConfigurazione_init.sql"/>
					</then>
				</if>				
				<concat destfile="${dist}/sql/${configInitSqlScriptName}" append="yes">
					<fileset dir="${tmp_sql}">
					    	<include name="InstallerProperties.sql"/>
					</fileset>
				</concat>
			</then>
			<else>
				<var name="configUpgradeSqlScriptName" value="GovWay_upgrade_${antinstaller_versione_attuale}.sql"/>
				<if>
					<equals arg1="${antinstaller_config_db}" arg2="config"/>
					<then>
						<var name="configUpgradeSqlScriptName" value="GovWayConfigurazione_upgrade_${antinstaller_versione_attuale}.sql"/>
					</then>
				</if>
				<concat destfile="${dist}/sql/${configUpgradeSqlScriptName}" append="yes">
					<fileset dir="${tmp_sql}">
					    	<include name="InstallerProperties.sql"/>
					</fileset>
				</concat>
			</else>
		</if>

		<if>
			<equals arg1="${antinstaller_modalita_installazione}" arg2="aggiornamento"/>
			<then>
				<mkdir dir="${dist}/sql/completi"/>
				<copy todir="${dist}/sql/completi">
					<fileset dir="${tmp_sql_completi}">
						<include name="GovWay*.sql"/>
					</fileset>
				</copy>
			</then>
		</if>
			
		<mkdir dir="${dist}/sql/utilities"/>
		<if>
			<equals arg1="${antinstaller_modalita_installazione}" arg2="nuova"/>
			<then>
				<mkdir dir="${dist}/sql/utilities/drop"/>
				<copy todir="${dist}/sql/utilities/drop">
					<fileset dir="${tmp_sql}">
				    		<include name="govway-*drop.sql"/>
					</fileset>
				</copy>
				<mkdir dir="${dist}/sql/utilities/delete"/>
				<copy todir="${dist}/sql/utilities/delete">
					<fileset dir="${tmp_sql}">
						<include name="govway-*delete.sql"/>
					</fileset>
				</copy>
			</then>
			<else>
				<mkdir dir="${dist}/sql/utilities/drop"/>
				<copy todir="${dist}/sql/utilities/drop">
					<fileset dir="${tmp_sql_completi}">
				    		<include name="govway-*drop.sql"/>
					</fileset>
				</copy>
				<mkdir dir="${dist}/sql/utilities/delete"/>
				<copy todir="${dist}/sql/utilities/delete">
					<fileset dir="${tmp_sql_completi}">
						<include name="govway-*delete.sql"/>
					</fileset>
				</copy>

				<mkdir dir="${dist}/sql/utilities/as"/>
				<copy todir="${dist}/sql/utilities/as">
					<fileset dir="${deploy_sql}/as">
					    	<include name="*.sql"/>
					</fileset>
				</copy>
			</else>
		</if>
		<if>
			<equals arg1="${antinstaller_modalita_installazione}" arg2="aggiornamento"/>
			<then>
				<mkdir dir="${dist}/sql/profili"/>
				<copy todir="${dist}/sql/profili">
					<fileset dir="${tmp_sql}/profili">
				    		<include name="GovWay*.sql"/>
					</fileset>
				</copy>
			</then>
		</if>
		
		<!-- Archivio -->
		<mkdir dir="${dist}/archivi"/>
		<if>
			<or>
				<matches string="${antinstaller_as}" pattern="jboss.*"/>
				<matches string="${antinstaller_as}" pattern="wildfly.*"/>
			</or>	
			<then>
				<antcall target="_prepareArchivioJboss"/>
			</then>
			<else>
				<antcall target="_prepareArchivioTomcat"/>
			</else>		
		</if>
		<if>
			<equals arg1="${antinstaller_console_env}" arg2="manager"/>
			<then>
				<mkdir dir="${dist}/archivi/manager"/>
				<mkdir dir="${dist}/archivi/runtime"/>
				<move todir="${dist}/archivi/manager">
					<fileset dir="${dist}/archivi">
						<exclude name="govway.*ar"/>
						<exclude name="manager"/>
						<exclude name="runtime"/>
					</fileset>
				</move>
				<move todir="${dist}/archivi/runtime">
					<fileset dir="${dist}/archivi">
						<include name="govway.*ar"/>
						<exclude name="manager"/>
						<exclude name="runtime"/>
					</fileset>
				</move>
			</then>
		</if>

		<!-- Batch -->
		<available file="${tmp_batch}" type="dir" property="batch.present"/>
		<if>
			<equals arg1="${batch.present}" arg2="true"/>
			<then>
				<mkdir dir="${dist}/batch"/>
				<copy todir="${dist}/batch">
					<fileset dir="${deploy_sw}/batch">
				    		<include name="crond/govway_batch.sh"/>
					</fileset>
				</copy>
				<if>
					<equals arg1="${antinstaller_stats_env}" arg2="batch"/>
					<then>
						<copy todir="${dist}/batch">
							<fileset dir="${deploy_sw}/batch">
						    		<include name="crond/govway_stats_crond"/>
							</fileset>
						</copy>
					</then>
				</if>
				<if>
					<equals arg1="${antinstaller_console_env}" arg2="manager"/>
					<then>
						<copy todir="${dist}/batch">
							<fileset dir="${deploy_sw}/batch">
						    		<include name="crond/govway_runtime_repository_crond"/>
							</fileset>
						</copy>
					</then>
				</if>
				<copy todir="${dist}/batch">
					<fileset dir="${tmp_batch}">
				    		<include name="**"/>
					</fileset>
				</copy>
				<antcall target="replace_token">
				    <param name="file" value="${dist}/batch/crond/govway_batch.sh"/>
					<param name="token" value="/var/govway/log"/>
					<param name="value" value="${log_dir}"/>
				</antcall>
				<if>
					<not>
						<equals arg1="${batch_dir}" arg2="" />
					</not>
					<then>
						<if>
							<equals arg1="${antinstaller_stats_env}" arg2="batch"/>
							<then>
								<antcall target="replace_token">
								    <param name="file" value="${dist}/batch/crond/govway_stats_crond"/>
									<param name="token" value="/var/govway/log"/>
									<param name="value" value="${batch_dir}"/>
								</antcall>
							</then>
						</if>
						<if>
							<equals arg1="${antinstaller_console_env}" arg2="manager"/>
							<then>
								<antcall target="replace_token">
								    <param name="file" value="${dist}/batch/crond/govway_runtime_repository_crond"/>
									<param name="token" value="/var/govway/log"/>
									<param name="value" value="${batch_dir}"/>
								</antcall>
							</then>
						</if>
					</then>
					<else>
						<if>
							<equals arg1="${antinstaller_stats_env}" arg2="batch"/>
							<then>
								<antcall target="replace_token">
								    <param name="file" value="${dist}/batch/crond/govway_stats_crond"/>
									<param name="token" value="/var/govway/log"/>
									<param name="value" value="${log_dir}"/>
								</antcall>
							</then>
						</if>
						<if>
							<equals arg1="${antinstaller_console_env}" arg2="manager"/>
							<then>
								<antcall target="replace_token">
								    <param name="file" value="${dist}/batch/crond/govway_runtime_repository_crond"/>
									<param name="token" value="/var/govway/log"/>
									<param name="value" value="${log_dir}"/>
								</antcall>
							</then>
						</if>
					</else>
				</if>
			</then>
		</if>
	</target>

	<target name="_setup_properties_aggiornamento">

		<!-- Properties di Aggiornamento -->
		<java classname="org.openspcoop2.core.commons.PropertiesScriptBuilder" fork="true" outputproperty="_output_props_upgrade">
			<arg value="${deploy_resources}/properties_upgrade" />
			<arg value="${dist}/cfg/utilities/diff" />
			<arg value="${dist}/cfg" />
			<arg value="${antinstaller_versione_precedente}" />
			<arg value="${antinstaller_versione_attuale}" />
			<classpath>
				<path id="classpath_run">
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_utils_*.jar"/>
					<fileset dir="${deploy_sw}" includes="**/openspcoop2_core_*.jar"/>
			   	</path>				
			</classpath>
		</java>
		<if>
			<not>
				<equals arg1="${_output_props_upgrade}" arg2=""/>
			</not>
			<then>
				<fail message="Generazione properties di aggiornamento: ${_output_props_upgrade}"/>	
			</then>
		</if>

	</target>
	
	<target name="_prepareArchivioJboss">
		<copy todir="${dist}/archivi/OpenSPCoop2">
		    <fileset dir="${tmp_archivi}/govway.ear"/>
		</copy>
		
		<!-- *** Aggiunta dell'applicazione govwayConsole ***-->
		<if>
			<istrue value="${build_govwayConsole_consoleIntegrataEAR}"/>
			<then>
				<fileset dir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib" id="govwayConsole.jar">
					<include name="*.jar"/>
				</fileset>
				<pathconvert pathsep=" " property="govwayConsole.classpath" refid="govwayConsole.jar">
					<map from="${tmp_archivi}/govwayConsole.war/WEB-INF/lib/" to="lib/"/>
				</pathconvert>
				<var name="manifest.classpath.govwayConsole" value="${govwayConsole.classpath}" />	
				<move todir="${dist}/archivi/OpenSPCoop2/lib" overwrite="true">
				    <fileset dir="${tmp_archivi}/govwayConsole.war/WEB-INF/lib"/>
				</move>
				<move todir="${dist}/archivi/OpenSPCoop2/properties" overwrite="true">
				    <fileset dir="${tmp_archivi}/govwayConsole.war/WEB-INF/classes"/>
				</move>
				<war destfile="${dist}/archivi/OpenSPCoop2/govwayConsole.war" basedir="${tmp_archivi}/govwayConsole.war">
					<manifest>
						<attribute name="Class-Path" value="${manifest.classpath.govwayConsole} properties/" />
					</manifest>
				</war>
			</then>
			<else>
				<zip destfile="${dist}/archivi/govwayConsole.war" basedir="${tmp_archivi}/govwayConsole.war"/>
			</else>
		</if>

		<!-- *** Aggiunta dell'applicazione govwayMonitor ***-->
		<if>
			<istrue value="${build_govwayMonitor_consoleIntegrataEAR}"/>
			<then>
				<fileset dir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib" id="govwayMonitor.jar">
					<include name="*.jar"/>
				</fileset>
				<pathconvert pathsep=" " property="govwayMonitor.classpath" refid="govwayMonitor.jar">
					<map from="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib/" to="lib/"/>
				</pathconvert>
				<var name="manifest.classpath.govwayMonitor" value="${govwayMonitor.classpath}" />	
				<move todir="${dist}/archivi/OpenSPCoop2/lib" overwrite="true">
				    <fileset dir="${tmp_archivi}/govwayMonitor.war/WEB-INF/lib"/>
				</move>
				<move todir="${dist}/archivi/OpenSPCoop2/properties" overwrite="true">
				    <fileset dir="${tmp_archivi}/govwayMonitor.war/WEB-INF/classes"/>
				</move>
				<war destfile="${dist}/archivi/OpenSPCoop2/govwayMonitor.war" basedir="${tmp_archivi}/govwayMonitor.war">
					<manifest>
						<attribute name="Class-Path" value="${manifest.classpath.govwayMonitor} properties/" />
					</manifest>
				</war>
			</then>
			<else>
				<zip destfile="${dist}/archivi/govwayMonitor.war" basedir="${tmp_archivi}/govwayMonitor.war"/>
			</else>
		</if>
				
		<!-- *** Aggiunta dell'applicazione govwayLoader ***-->
		<if>
			<and>
				<istrue value="${antinstaller_loader}"/>
			</and>
			<then>
				<if>
					<istrue value="${build_govwayLoader_consoleIntegrataEAR}"/>
					<then>
						<fileset dir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib" id="govway_loader.jar">
							<include name="*.jar"/>
						</fileset>
						<pathconvert pathsep=" " property="govway_loader.classpath" refid="govway_loader.jar">
							<map from="${tmp_archivi}/govwayLoader.war/WEB-INF/lib/" to="lib/"/>
						</pathconvert>
						<var name="manifest.classpath.govway_loader" value="${govway_loader.classpath}" />	
						<move todir="${dist}/archivi/OpenSPCoop2/lib" overwrite="true">
						    <fileset dir="${tmp_archivi}/govwayLoader.war/WEB-INF/lib"/>
						</move>
						<move todir="${dist}/archivi/OpenSPCoop2/properties" overwrite="true">
						    <fileset dir="${tmp_archivi}/govwayLoader.war/WEB-INF/classes"/>
						</move>
						<war destfile="${dist}/archivi/OpenSPCoop2/govwayLoader.war" basedir="${tmp_archivi}/govwayLoader.war">
							<manifest>
								<attribute name="Class-Path" value="${manifest.classpath.govway_loader} properties/" />
							</manifest>
						</war>
					</then>
					<else>
						<zip destfile="${dist}/archivi/govwayLoader.war" basedir="${tmp_archivi}/govwayLoader.war"/>
					</else>
				</if>
			</then>
		</if>
				
		<!-- *** Correzione Application.xml (aggiunta archivi) ***-->
		<if>
			<or>
				<istrue value="${build_govwayConsole_consoleIntegrataEAR}"/>
				<istrue value="${build_govwayMonitor_consoleIntegrataEAR}"/>
				<and>
					<istrue value="${antinstaller_loader}"/>
					<istrue value="${build_govwayLoader_consoleIntegrataEAR}"/>
				</and>
			</or>
			<then>
		        <replace file="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" token="&lt;/application&gt;" value=""/>
				<if>
					<istrue value="${build_govwayConsole_consoleIntegrataEAR}"/>
					<then>
		        		<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" append="yes">
<![CDATA[

	<!-- Start MODULE govwayConsole -->
	<module>
		<web>
			<web-uri>govwayConsole.war</web-uri>
			<context-root>govwayConsole</context-root>
		</web>
	</module>
	<!-- End MODULE govwayConsole -->
		        				
]]>
		        		</concat>
					</then>
				</if>
				<if>
					<istrue value="${build_govwayMonitor_consoleIntegrataEAR}"/>
					<then>
		        		<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" append="yes">
<![CDATA[

	<!-- Start MODULE govwayMonitor -->
	<module>
		<web>
			<web-uri>govwayMonitor.war</web-uri>
			<context-root>govwayMonitor</context-root>
		</web>
	</module>
	<!-- End MODULE govwayMonitor -->
		        				
]]>
		        		</concat>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_loader}"/>
						<istrue value="${build_govwayLoader_consoleIntegrataEAR}"/>
					</and>
					<then>
		        		<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" append="yes">
<![CDATA[
	
	<!-- Start MODULE govwayLoader -->
	<module>
		<web>
			<web-uri>govwayLoader.war</web-uri>
			<context-root>govwayLoader</context-root>
		</web>
	</module>
	<!-- End MODULE govwayLoader -->
		        			
]]>
		        		</concat>
					</then>
				</if>
				<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" append="yes">
<![CDATA[
</application>
]]>
		        </concat>
				<antcall target="dos2unix">
					<param name="dir" value="${dist}/archivi/OpenSPCoop2/META-INF"/>
				    <param name="file" value="application.xml"/>
				</antcall>
			</then>
		</if>
		
		<!-- *** Correzione Application.xml (aggiunta resource-ref) ***-->
		<replace file="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" token="&lt;/application&gt;" value=""/>
		<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" append="yes">
<![CDATA[
	
	<!-- resource-ref -->

	<resource-ref>
		<res-ref-name>govwayds</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<lookup-name>java:/org.govway.datasource</lookup-name>
	</resource-ref>

	<resource-ref>
		<res-ref-name>govwayds.console</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<lookup-name>java:/org.govway.datasource.console</lookup-name>
	</resource-ref>]]>
		</concat>
		<if>
			<equals arg1="${antinstaller_console_env}" arg2="manager"/>
			<then>
				<available file="${dist}/datasource/runtime/govway_tracciamento-ds.xml" type="file" property="dsTracciamento.present"/>
			</then>
			<else>
				<available file="${dist}/datasource/govway_tracciamento-ds.xml" type="file" property="dsTracciamento.present"/>
			</else>
		</if>
		<if>
			<and>
				<equals arg1="${dsTracciamento.present}" arg2="true"/>
				<equals arg1="${antinstaller_log_db}" arg2="log"/>
			</and>
			<then>
				<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" append="yes">
<![CDATA[	<resource-ref>
		<res-ref-name>govwayds.tracciamento</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<lookup-name>java:/org.govway.datasource.tracciamento</lookup-name>
	</resource-ref>]]>
				</concat>
			</then>
		</if>
		<if>
			<equals arg1="${antinstaller_console_env}" arg2="manager"/>
			<then>
				<available file="${dist}/datasource/runtime/govway_statistiche-ds.xml" type="file" property="dsStatistiche.present"/>
			</then>
			<else>
				<available file="${dist}/datasource/govway_statistiche-ds.xml" type="file" property="dsStatistiche.present"/>
			</else>
		</if>
		<if>
			<and>
				<equals arg1="${dsStatistiche.present}" arg2="true"/>
				<equals arg1="${antinstaller_stats_db}" arg2="stats"/>
			</and>
			<then>
				<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" append="yes">
<![CDATA[	<resource-ref>
		<res-ref-name>govwayds.statistiche</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<lookup-name>java:/org.govway.datasource.statistiche</lookup-name>
	</resource-ref>]]>
				</concat>
			</then>
		</if>
		<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" append="yes">
<![CDATA[	<!-- End resource-ref -->
		        			
]]>
		</concat>
		<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/application.xml" append="yes">
<![CDATA[
</application>
]]>
		</concat>

		<!--*** Correzione jboss-deployment-structure *** -->
		<if>
			<and>
				<or>
					<equals arg1="${antinstaller_as}" arg2="jboss7" />
					<matches string="${antinstaller_as}" pattern="wildfly.*"/>
				</or>
				<or>
					<istrue value="${build_govwayConsole_consoleIntegrataEAR}"/>
					<istrue value="${build_govwayMonitor_consoleIntegrataEAR}"/>
					<and>
						<istrue value="${antinstaller_loader}"/>
						<istrue value="${build_govwayLoader_consoleIntegrataEAR}"/>
					</and>
				</or>
			</and>
			<then>
				<replace file="${dist}/archivi/OpenSPCoop2/META-INF/jboss-deployment-structure.xml" token="&lt;/jboss-deployment-structure&gt;" value=""/>
				<if>
					<istrue value="${build_govwayConsole_consoleIntegrataEAR}"/>
					<then>
						<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/jboss-deployment-structure.xml" append="yes">
<![CDATA[

	<!-- Start MODULE govwayConsole -->
	<sub-deployment name="govwayConsole.war">
        <exclusions>
                <module name="org.apache.log4j"/>
                <module name="org.slf4j" />
                <module name="org.apache.commons.logging"/>
                <module name="org.jboss.logging"/>
        </exclusions>
    </sub-deployment>
	<!-- End MODULE govwayConsole -->
								
]]>
						</concat>
					</then>
				</if>
				<if>
					<istrue value="${build_govwayMonitor_consoleIntegrataEAR}"/>
					<then>
						<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/jboss-deployment-structure.xml" append="yes">
<![CDATA[

	<!-- Start MODULE govwayMonitor -->
	<sub-deployment name="govwayMonitor.war">
        <exclusions>
                <module name="org.apache.log4j"/>
                <module name="org.slf4j" />
                <module name="org.apache.commons.logging"/>
                <module name="org.jboss.logging"/>
        </exclusions>
    </sub-deployment>
	<!-- End MODULE govwayMonitor -->
								
]]>
						</concat>
					</then>
				</if>
				<if>
					<and>
						<istrue value="${antinstaller_loader}"/>
						<istrue value="${build_govwayLoader_consoleIntegrataEAR}"/>
					</and>
					<then>
						<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/jboss-deployment-structure.xml" append="yes">
<![CDATA[

	<!-- Start MODULE govwayLoader -->
    <sub-deployment name="govwayLoader.war">
        <exclusions>
                <module name="org.apache.log4j"/>
                <module name="org.slf4j" />
                <module name="org.apache.commons.logging"/>
                <module name="org.jboss.logging"/>
        </exclusions>
    </sub-deployment>
	<!-- End MODULE govwayLoader -->

]]>
						</concat>
					</then>
				</if>		
				<concat destfile="${dist}/archivi/OpenSPCoop2/META-INF/jboss-deployment-structure.xml" append="yes">
<![CDATA[
</jboss-deployment-structure>
]]>

				</concat>
				<antcall target="dos2unix">
					<param name="dir" value="${dist}/archivi/OpenSPCoop2/META-INF"/>
				    <param name="file" value="jboss-deployment-structure.xml"/>
				</antcall>
			</then>
		</if>

		<!-- ** correggo manifest ** -->

		<antcall target="-correctManifest">
			<param name="correctManifest_archive" value="${dist}/archivi/OpenSPCoop2/govway.war"/>
			<param name="correctManifest_archive_destDir" value="${dist}/archivi/OpenSPCoop2/GOVWAY_WAR"/>
		</antcall>
		<antcall target="-correctManifest"> <!-- la seconda volta serve a risolvere i RELEASE rimasti perche' inizialmente andati a capo -->
			<param name="correctManifest_archive" value="${dist}/archivi/OpenSPCoop2/govway.war"/>
			<param name="correctManifest_archive_destDir" value="${dist}/archivi/OpenSPCoop2/GOVWAY_WAR"/>
		</antcall>

		<!-- *** Aggiunta dell'applicazione govwaySec *** -->
		<if>
			<istrue value="${build_openspcoop_sec_archive}" />
			<then>
				<!-- ** correggo manifest ** -->
				<antcall target="-correctManifest">
					<param name="correctManifest_archive" value="${dist}/archivi/OpenSPCoop2/govwaySec.war"/>
					<param name="correctManifest_archive_destDir" value="${dist}/archivi/OpenSPCoop2/GOVWAYSEC_WAR"/>
				</antcall>
				<antcall target="-correctManifest"> <!-- la seconda volta serve a risolvere i RELEASE rimasti perche' inizialmente andati a capo -->
					<param name="correctManifest_archive" value="${dist}/archivi/OpenSPCoop2/govwaySec.war"/>
					<param name="correctManifest_archive_destDir" value="${dist}/archivi/OpenSPCoop2/GOVWAYSEC_WAR"/>
				</antcall>
			</then>
			<else>
				<delete file="${dist}/archivi/OpenSPCoop2/govwaySec.war"/>
			</else>
		</if>
		
		<!-- ** correggo manifest in govway.jar (stateful) ** -->
		<available file="${dist}/archivi/OpenSPCoop2/govway.jar" type="file" property="govway.jar.present"/>
		<if>
			<equals arg1="${govway.jar.present}" arg2="true"/>
			<then>
				<antcall target="-correctManifest">
					<param name="correctManifest_archive" value="${dist}/archivi/OpenSPCoop2/govway.jar"/>
					<param name="correctManifest_archive_destDir" value="${dist}/archivi/OpenSPCoop2/GOVWAY_JAR"/>
				</antcall>
				<antcall target="-correctManifest"> <!-- la seconda volta serve a risolvere i RELEASE rimasti perche' inizialmente andati a capo -->
					<param name="correctManifest_archive" value="${dist}/archivi/OpenSPCoop2/govway.jar"/>
					<param name="correctManifest_archive_destDir" value="${dist}/archivi/OpenSPCoop2/GOVWAY_JAR"/>
				</antcall>
			</then>
		</if>
	
	
		<!-- *** Aggiunta dell'applicazione govwayAPIConfig.war ***-->
		<if>
			<istrue value="${antinstaller_rs_config}"/>
			<then>
				<zip destfile="${dist}/archivi/govwayAPIConfig.war" basedir="${tmp_archivi}/govwayAPIConfig.war"/>
			</then>
		</if>

		<!-- *** Aggiunta dell'applicazione govwayAPIMonitor.war ***-->
		<if>
			<istrue value="${antinstaller_rs_monitor}"/>
			<then>
				<zip destfile="${dist}/archivi/govwayAPIMonitor.war" basedir="${tmp_archivi}/govwayAPIMonitor.war"/>
			</then>
		</if>
		
		<!-- ** end ** -->
		<zip destfile="${dist}/archivi/govway.ear" basedir="${dist}/archivi/OpenSPCoop2"/>
		<delete dir="${dist}/archivi/OpenSPCoop2"/>
		
	</target>

	<target name="-correctManifest">
		<unzip src="${correctManifest_archive}" dest="${correctManifest_archive_destDir}"/>

		<!-- replace jar di openspcoop con patch version -->
		<replace file="${correctManifest_archive_destDir}/META-INF/MANIFEST.MF" token="_RELEASE." value="-${antinstaller_versione_attuale_con_p_level}."/>

		<!-- replace jar in cui e' stato corretto il manifest -->
		<replace file="${correctManifest_archive_destDir}/META-INF/MANIFEST.MF" token="jaxb-impl-2.3.2.jar" value="jaxb-impl-2.3.2.gw.jar"/>
		<replace file="${correctManifest_archive_destDir}/META-INF/MANIFEST.MF" token="jaxb-core-2.3.0.1.jar" value="jaxb-core-2.3.0.1.gw.jar"/>
		<replace file="${correctManifest_archive_destDir}/META-INF/MANIFEST.MF" token="jaxb-xjc-2.3.2.jar" value="jaxb-xjc-2.3.2.gw.jar"/>
		<replace file="${correctManifest_archive_destDir}/META-INF/MANIFEST.MF" token="xalan-2.7.2.jar" value="xalan-2.7.2.gw.jar"/>
		<replace file="${correctManifest_archive_destDir}/META-INF/MANIFEST.MF" token="serializer-2.7.2.jar" value="serializer-2.7.2.gw.jar"/>

		<copy file="${correctManifest_archive_destDir}/META-INF/MANIFEST.MF" todir="${correctManifest_archive_destDir}"/>
		<delete file="${correctManifest_archive}"/>		
		<jar destfile="${correctManifest_archive}" basedir="${correctManifest_archive_destDir}" 
			filesetmanifest="merge" excludes="MANIFEST.MF"/>
		<delete dir="${correctManifest_archive_destDir}"/>	
	</target>
	
	<target name="_prepareArchivioTomcat">

		<!-- govway -->
		<zip destfile="${dist}/archivi/govway.war" basedir="${tmp_archivi}/govway.war"/>
		
		<!-- *** Aggiunta dell'applicazione govwaySec *** -->
		<if>
			<istrue value="${build_openspcoop_sec_archive}" />
			<then>
				<zip destfile="${dist}/archivi/govwaySec.war" basedir="${tmp_archivi}/govwaySec.war"/>
			</then>
		</if>
		
		<!-- *** Aggiunta dell'applicazione govwayConsole ***-->
		<zip destfile="${dist}/archivi/govwayConsole.war" basedir="${tmp_archivi}/govwayConsole.war"/>
		
		<!-- *** Aggiunta dell'applicazione govwayMonitor ***-->
		<zip destfile="${dist}/archivi/govwayMonitor.war" basedir="${tmp_archivi}/govwayMonitor.war"/>
		
		<!-- *** Aggiunta dell'applicazione govwayLoader ***-->
		<if>
			<and>
				<istrue value="${antinstaller_loader}"/>
			</and>
			<then>
				<zip destfile="${dist}/archivi/govwayLoader.war" basedir="${tmp_archivi}/govwayLoader.war"/>
			</then>
		</if>

		<!-- *** Aggiunta dell'applicazione govwayAPIConfig.war ***-->
		<if>
			<istrue value="${antinstaller_rs_config}"/>
			<then>
				<zip destfile="${dist}/archivi/govwayAPIConfig.war" basedir="${tmp_archivi}/govwayAPIConfig.war"/>
			</then>
		</if>

		<!-- *** Aggiunta dell'applicazione govwayAPIMonitor.war ***-->
		<if>
			<istrue value="${antinstaller_rs_monitor}"/>
			<then>
				<zip destfile="${dist}/archivi/govwayAPIMonitor.war" basedir="${tmp_archivi}/govwayAPIMonitor.war"/>
			</then>
		</if>
	</target>
		
</project>
